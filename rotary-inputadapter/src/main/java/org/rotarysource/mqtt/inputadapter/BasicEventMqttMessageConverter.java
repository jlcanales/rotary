/*
Copyright (c) 2014 the original author or authors.
 
This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.
 
This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 
You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA}]
*/
package org.rotarysource.mqtt.inputadapter;

import java.util.Calendar;
import java.util.HashMap;

import org.apache.commons.lang.NotImplementedException;
import org.eclipse.paho.client.mqttv3.MqttException;
import org.eclipse.paho.client.mqttv3.MqttMessage;
import org.rotarysource.events.BasicEvent;
import org.rotarysource.mqtt.support.converter.MessageConverter;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class BasicEventMqttMessageConverter implements MessageConverter {

	private static Logger log = LoggerFactory.getLogger(BasicEventMqttMessageConverter.class);
	
	/**
	* Create a new BasicEventMqttMessageConverter, for bean-style usage.
	*/	 
	 public BasicEventMqttMessageConverter(){
		 
	 }
	 
	@Override
	public MqttMessage toMessage(Object object) throws MqttException {
		//TODO: Implement this method
	    throw new NotImplementedException("TODO: This method is not implemented yet");
	}

	@Override
	public Object fromMessage(MqttMessage message) throws MqttException {

		HashMap<String, String> compdata = new HashMap<String, String>();
		BasicEvent 	       		basEvent = new BasicEvent();
		
		String messageString    = message.toString();		
		String messageEntries[] = messageString.split(",");

		// Key and Value extraction from each line
		for( int i = 0; i < messageEntries.length; i++){

			String keyValue[] = messageEntries[i].split("\":\"");
			String key = keyValue[0].substring(keyValue[0].indexOf('\"') + 1);
			String value = keyValue[1].substring(0, keyValue[1].indexOf('\"'));
			
			log.debug("Adding Entry: key->{}, value->{} ", key, value);
			
			compdata.put(key, value);
		}

		//Autogenerated EventId
		basEvent.setEventId("xxxx");
		//Autogenerated Event Code
		basEvent.setEventCode("xxxx");
		//Autogenerated Event Type
		basEvent.setEventType("INFO");
		
		Calendar cal = Calendar.getInstance();
		basEvent.setEventTimestamp(cal.getTime());   
		basEvent.setCompData(compdata);
		
		return basEvent;
	}

}
